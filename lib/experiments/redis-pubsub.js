// Generated by CoffeeScript 2.2.1
(function() {
  'use strict';
  var CND, REDIS, alert, badge, client, debug, echo, help, info, jr, msg_count, promisify, pub, rpr, sub, urge, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'INTERSHOP/REDIS';

  debug = CND.get_logger('debug', badge);

  alert = CND.get_logger('alert', badge);

  whisper = CND.get_logger('whisper', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  info = CND.get_logger('info', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  REDIS = require('redis');

  promisify = (require('util')).promisify;

  jr = JSON.stringify;

  client = REDIS.createClient();

  client.on('error', function(error) {
    return alert(error);
  });

  client.on('ready', function() {
    return urge('ready');
  });

  client.on('connect', function() {
    return urge('connect');
  });

  client.on('reconnecting', function() {
    return urge('reconnecting');
  });

  client.on('end', function() {
    return urge('end');
  });

  client.on('warning', function(message) {
    return urge(message);
  });

  sub = REDIS.createClient();

  pub = REDIS.createClient();

  msg_count = 0;

  sub.on('psubscribe', function(channel, count) {
    debug('44921', channel, count);
    pub.publish('intershop/foo', "first message.");
    pub.publish('intershop/foo', jr({
      foo: "second message."
    }));
    return pub.publish('intershop/foo', "third message.");
  });

  sub.on('pmessage', function(pattern, channel, message) {
    var data, ref, ref1, ref2, rpcid, value;
    // info "sub channel #{pattern} -> #{channel}: #{rpr message}"
    if (channel === 'intershop/rpc/q') {
      value = JSON.parse(message);
      // urge rpr value
      ({rpcid} = value);
      if (rpcid == null) {
        rpcid = 1; // 'no RPC ID'
      }
      data = (ref = value.data) != null ? ref : null;
      /* TAINT implement error protocol for requests with unexpected data */
      return pub.publish('intershop/rpc/a', jr({
        rpcid,
        result: ((ref1 = data.a) != null ? ref1 : 0) + ((ref2 = data.b) != null ? ref2 : 0)
      }));
    }
  });

  // msg_count += 1
  // if msg_count is 3
  //   sub.unsubscribe()
  //   sub.quit()
  //   pub.quit()
  sub.psubscribe('intershop/*');

}).call(this);

//# sourceMappingURL=redis-pubsub.js.map
